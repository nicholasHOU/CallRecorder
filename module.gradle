
def version_code = 116
apply plugin: 'com.android.library'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        if(project.ext.has("versionCode")){
            versionCode project.ext.getProperty("versionCode") as Integer
        }else {
            versionCode version_code
        }
        versionName project.ext.getProperty("version") as String

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        //----DefaultExtraPropertiesExtension----
        if(project.ext.has("moduleName")){
            ndk{
                moduleName project.ext.getProperty("moduleName")
                //abiFilters "armeabi", "armeabi-v7a", "x86"
                setAbiFilters project.ext.has("abiFilters") ? project.ext.getProperty("abiFilters") : ["armeabi"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

//modify by Seven ï¼› fix Gradle Upgrade
android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath=true

//apply plugin: 'com.gutils.apkfly.autogen'
//autogen{
//    coreProject project(':g_com:GBusiness')
//}